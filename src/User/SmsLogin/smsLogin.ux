    <import src="../../common/TitleBar.ux"></import>
    <import name="toast" src="../../common/Toast/index.ux"></import>
    <template>
        <div class="login" onclick="inputFocus()">
            <TitleBar external="{{external}}" title="登录" color="#fff"></TitleBar>
            <div class="tab-select">
                <div @click="toDetail('User/PwLogin')">
                    <text>密码登录</text>
                </div>
            </div>
            <div class="tab-content-section">
                <div class="input" onclick="stopEvent()">
                    <div class="name"><text>手机号</text></div>
                    <div class="content">
                        <input @change="smsPhone" value="{{sms_phone}}" id="sms_phone" type="number" placeholder="请输入手机号">
                        <div if="{{clickable}}" @click="countdown" class="countdown-body">
                            <text class="countdown-btn">{{codeText}}</text>
                        </div>
                        <div class="countdown-body seconds-body" if="{{!clickable}}">
                            <text class="seconds" >{{codeText}}</text>
                        </div>
                    </div>
                </div>
                <!-- <div class="info-prompt">
                    <div></div>
                    <text>手机号有误请重新输入</text>
                </div> -->
                <div class="input password-input" onclick="stopEvent()">
                    <div class="name"><text>验证码</text></div>
                    <div class="captcha">
                        <input id="sms_code" @change="smsCode" value="{{sms_code}}" type="number" placeholder="请输入验证码">
                    </div>
                </div>
                <div class="user-agreement">
                    <text @click="toDetail('User/About/Protocol')">温馨提示：未注册云缴费快应用账号的手机号，登录时将自动注册，且代表您已同意<span class="agreement-text">《用户服务协议》</span></text>
                </div>
                <div class="btn">
                    <input @click="smsLogin" type="button" value="登录">
                </div>
            </div>
            <!-- 图形验证码 -->
            <div class="img-capthca_body" if="showCapthcha">
                <div class="img-capthca_content">
                    <text>请填写图形验证码</text>
                    <div class="image-capthca">
                        <input value="{{capthchaValue}}" @change="changeCapthcha" type="text" />
                        <image src="{{captcha}}" alt=""></image>
                    </div>
                    <div class="image-capthca_btn">
                        <text @click="closeCapthcha">取消</text>
                        <text class="capthca-confirm" @click="countdown">确定</text>
                    </div>
                </div>
            </div>
            <toast if="{{show_toast}}" text="{{toast_text}}"></toast>
        </div>
    </template>

    <style lang="less">
    @import "./smsLogin.less";
    </style>

    <script>
    import router from '@system.router';
    import request from '../../utils/request';
    import storage from "@system.storage";
    import fetch from '@system.fetch'
    import statis from '../../utils/statistics.js'

    export default Custom_page({
        protected: {
            show_toast: false,
            external: '',
            toast_text: '',
            sms_phone: '',
            sms_code: '',
            showCapthcha:false,
            tab: 'i0',
            mobile: '',
            password: '',
            captcha:'',
            capthchaValue:''
        },
        private: {
            detail: null,
            tq: [],
            codeText: "获取验证码",
            clickable: true,
            timer: ''
        },
        changeCapthcha(response){
            this.capthchaValue = response ? response.value : this.capthchaValue;
        },
        closeCapthcha(){
            this.showCapthcha = false;
        },
        showCapthchaFn(capthchaImg){
            this.showCapthcha = true;
            this.captcha = capthchaImg;
        },
        // 监听密码输入
        changePassword(response) {
            this.password = response ? response.value : this.password;
        },
        onReady() {
            // request.get('user/captcha').then(res => {
            //     this.captcha = res.data
            //     console.log(this.captcha)
            // })
        },
        // 监听手机号输入
        changeMobile(response) {
            this.mobile = response ? response.value : this.mobile;
        },
        onDestroy() {
            clearInterval(this.timer);
        },
        reTab(tab) {
            let me = this;
            me.tab = 'i' + tab.index;
        },
        smsPhone(response) {
            this.sms_phone = response ? response.value : this.sms_phone;
        },
        smsCode(response) {
            this.sms_code = response ? response.value : this.sms_code;
        },
        // 显示toast
        showToast(text) {
            this.toast_text = text;
            this.show_toast = true;
            setTimeout(() => {
                this.show_toast = false;
            }, 1500)
        },
        // 登录
        login() {
            if (!(/^1[3456789]\d{9}$/.test(this.mobile))) {
                this.showToast("手机号码有误，请重填");
                return false;
            }
            if (!this.password) {
                this.showToast("请输入密码");
                return false;
            }
            const params = {
                mobile: this.mobile,
                password: this.password
            }
            statis.statis('login_click', { mobile: this.mobile }, this)

            request.post('user/login', params).then(res => {
                console.log(res)
                if (res.status == 200) {
                    statis.statis('login_click_success', { mobile: this.mobile }, this)
                    this.showToast("登录成功");
                    storage.set({
                        key: 'sid',
                        value: res.data.sessionId,
                    })
                    storage.set({
                        key: 'mobile',
                        value: res.data.mobile,
                    })
                    router.replace({
                        uri: "/"
                    })
                } else {
                    this.showToast(res.msg);
                }

            }).catch(err => {
                this.showToast("网络错误");
            })
        },
        inputFocus() {
            this.$element('sms_code').focus({ focus: false })
            this.$element('sms_phone').focus({ focus: false })
            // this.$element('mobile').focus({ focus: false })
            // this.$element('password').focus({ focus: false })
        },
        stopEvent() {
            console.log(2)
        },
        // 短信登录
        smsLogin() {
            statis.statis('sms_login_click', { mobile: this.sms_phone }, this)
            if (!(/^1[3456789]\d{9}$/.test(this.sms_phone))) {
                this.showToast("手机号码有误，请重填");
                return false;
            }
            if (this.sms_code.length != 4) {
                this.showToast("请输入四位验证码");
                return false;
            }
            const params = {
                mobile: this.sms_phone,
                code: this.sms_code
            }
            request.post('user/login/sms', params).then(res => {
                if (res.status == 200) {
                    this.showToast("登录成功");
                    statis.statis('sms_login_click_success', { mobile: this.sms_phone }, this)

                    // APP_STATISTICS.track_event("sms_login_click",{'mobile':this.sms_phone});
                    // fetch.fetch({
                    //     url:`${this.$app.$data.logUrl}?event=sms_login_click&data={'mobile':${this.sms_phone}}&tag=云缴费`,
                    // })
                    storage.set({
                        key: 'sid',
                        value: res.data.sessionId,
                        success: function () {
                            router.replace({
                                uri: "/"
                            })
                            // router.back({
                            //     path: '/Home'
                            // })
                        }
                    })
                    storage.set({
                        key: 'mobile',
                        value: res.data.mobile,
                    })

                } else {
                    this.showToast(res.msg);
                }

            }).catch(err => {
                this.showToast("网络错误");
            })
        },
        // 正则手机号并发送验证码
        verifyPhone() {
            statis.statis('sms_code_click', { mobile: this.sms_phone }, this)
            if (!(/^1[3456789]\d{9}$/.test(this.sms_phone))) {
                this.showToast("手机号码有误，请重填");
                return false;
            } else {
                request.post('user/sms', { mobile: this.sms_phone ,captcha:this.capthchaValue}).then((res) => {
                    console.log(res)
                    if(res.status == 200){
                        this.closeCapthcha()
                        this.showToast("验证码发送成功！");
                        statis.statis('sms_code_click_success', { mobile: this.sms_phone }, this)
                    }else if(res.status == 400){
                        this.showToast(res.msg);
                        this.showCapthchaFn(res.data.data);
                        clearInterval(this.timer);
                        this.clickable = true;
                        this.codeText = "再次发送"
                    }else{
                        this.showToast("网络错误");
                        clearInterval(this.timer);
                        this.clickable = true;
                        this.codeText = "再次发送"
                    }
                    
                }).catch(err => {
                    this.showToast("网络错误");
                })
                return true;
            }
        },
        // 验证码倒计时
        countdown() {
            const smsType = this.verifyPhone()
            if (smsType) {
                this.clickable = false;
                if (this.codeText.indexOf("获取") != -1 || this.codeText.indexOf("发送") != -1) {
                    this.codeText = "60s"
                    // this.$element('sms_phone').focus({focus:false})
                    this.inputFocus()
                }
                this.timer = setInterval(() => {
                    let code = Number(this.codeText.substring(0, 2));
                    if (code <= 1) {
                        clearInterval(this.timer);
                        this.clickable = true;
                        this.codeText = "再次发送"
                    } else {
                        const sec = code - 1
                        this.codeText = (sec < 10 ? '0' + sec : sec) + "s"
                    }
                }, 1000)

            }
        },
        // 跳转toDetail
        toDetail(path){
            router.push({
                uri:path
            })
        }
    })
    </script>