<import src="../../common/TitleBar.ux"></import>
<import name="toast" src="../../common/Toast/index.ux"></import>
<import src="../../common/YjfLoading.ux"></import>

<template>
    <div class="group-manage_body">
        <TitleBar title='户号管理' color="#fff"></TitleBar>
        <YjfLoading if="showLoading" />
        <list>
            <list-item type="{{$item.groupName}}" class="group-body" for="groupList">
                <div class="group-body_title">
                    <text>{{$item.groupName}}</text>
                    <div>
                        <image resize-mode="contain" @click="showModificationFn('choose',$item)" src="../../images/groupImg/choose_icon.png"></image>
                        <image resize-mode="contain" @click="showDeleteFn($item)" src="../../images/groupImg/delete_icon.png"></image>
                    </div>
                </div>
                <div class="group-manage_content" for="item in $item.children">
                    <div class="group-content_left">
                        <image width="80" height="80" resize-mode="contain" src="{{item.imgUrl}}"></image>
                        <div>
                            <text class="pay-type_text">{{item.typeName}}</text>
                            <text class="pay-bill">{{item.bill}}</text>
                        </div>
                    </div>
                    <div class="group-content_right">
                        <image resize-mode="contain" @click="goRecharge($item.groupName,item)" src="../../images/groupImg/choose_icon.png"></image>
                        <image resize-mode="contain" @click="showDeleteBillFn($item.groupName,item)" src="../../images/groupImg/delete_icon.png"></image>
                    </div>
                </div>
            </list-item>
            <list-item class="group-body" onclick="showModificationFn('add',{})">
            <div class="add-group">
                    <!-- <text>➕</text> -->
                    <image resize-mode="contain" src="../../images/groupImg/add_group_icon.png"></image>
                    <text>新增分组</text>
            </div>
            </list-item>
        </list>
        <div if='showModification' @click="closeWindow" class="modification-body">
            <div @click="voidFn" class="modification-content">
                <div class="modification-title">
                    <text>请输入新的分组名称</text>
                </div>
                <div class="modification-input">
                    <input id="groupValue" value="{{groupNameValue}}" @change="changeGroupName" placeholder="请输入分组名称" type="text"></input>
                </div>
                <div class="modification-btn">
                    <text @click="closeWindow">取消</text>
                    <text @click="saveGroupInfo" class="modification-save_btn">保存</text>
                </div>
            </div>
        </div>
        <div if="showDelete" @click="closeWindow" class="modification-body delete-body">
            <div class="modification-content">
                <div class="modification-title">
                    <text>确认删除分组？</text>
                </div>
                <div class="modification-input">
                    <text>分组下的户号也将一同删除</text>
                </div>
                <div class="modification-btn">
                    <text>取消</text>
                    <text @click="deleteGroup" class="modification-save_btn">删除</text>
                </div>
            </div>
        </div>
        <div if="showDeleteBill" @click="closeWindow" class="modification-body delete-body">
            <div class="modification-content">
                <div class="modification-title">
                    <text>确认删除户号？</text>
                </div>
                <div class="modification-input">
                    <text>户号删除后可重新添加</text>
                </div>
                <div class="modification-btn">
                    <text>取消</text>
                    <text @click="deleteBill" class="modification-save_btn">删除</text>
                </div>
            </div>
        </div>
        <toast if="{{show_toast}}" text="{{toast_text}}"></toast>
    </div>
</template>
<style lang="less">
 @import './index.less';
</style>
<script>
import storage from '@system.storage';
import request from '../../utils/request'
import router from '@system.router';
export default Custom_page({
    private: {
        showModification:false,
        showDelete:false,
        showDeleteBill:false,
        groupList:[],
        groupNameValue:"",
        groupType:'',
        groupName:'',
        item:{},
        billItem:{},
        toast_text:'',
        show_toast:false,
        showLoading:false
    },
    onShow() {
        storage.get({
            key:'_id',
            success:(data) => {
                if(data){
                    this._id = data;
                    this.getGroup()
                }
            }
        })
    },
    // 显示toast
    showToast(text) {
        this.toast_text = text;
        this.show_toast = true;
        setTimeout(() => {
            this.show_toast = false;
        }, 1500)
    },
    voidFn(){
        return;
    },
    changeGroupName(response){
            this.groupNameValue = response ? response.value : this.groupNameValue;
    },
    // 获取分组信息
    getGroup(){
        request.post('user/get-group',{sid:this._id}).then(res =>{
                if(res.status == 200){
                    this.groupList = res.data.group
                }
            })
    },
    inputFocus() {
        if(this.$element('groupValue')){
            this.$element('groupValue').focus({ focus: false })
        }
    },
    // 保存分组信息
    saveGroupInfo(){
        if(this.groupNameValue == ''){
            this.showToast('请填写分组名称')
            return false;
        }
        this.inputFocus()
        if(this.groupType == 'add'){
            //新增
            request.post('user/add-group',{
                sid:this._id,
                groupName:this.groupNameValue
            }).then(res => {
                this.closeWindow();
                this.item = {}
                this.groupNameValue = ''
                if(res.status == 200){
                    this.showToast('新增分组成功');
                    this.getGroup();
                }else{
                    this.showToast('新增分组失败');
                }
            }).catch(err =>{
                    this.showToast('网络错误');
            })
        }else{
            //修改
            request.post('user/reset-group',{
                sid:this._id,
                oldGroupName:this.item.groupName,
                groupName:this.groupNameValue
            }).then(res => {
                this.closeWindow();
                this.groupNameValue = ''
                this.item = {}
                if(res.status == 200){
                    this.showToast('修改成功');
                    this.getGroup();
                }else{
                    this.showToast('修改失败');
                }
            }).catch(err =>{
                    this.showToast('网络错误');
            })
        }
    },
    // 删除分组
    deleteGroup(){
        request.post('user/delete-group',{
            sid:this._id,
            groupName:this.item.groupName
        }).then(res => {
            this.item = {}
            this.closeWindow()
            if(res.status == 200){
                this.showToast('删除成功');
                this.getGroup()
            }else{
                this.showToast('删除失败');
            }

        }).catch(err => {

        })
    },
    // 删除户号
    deleteBill(){
        console.log(this.item)
        console.log(this.item.groupName)
        request.post('user/delete-bill',{
            sid:this._id,
            groupName:this.groupName,
            bill:this.billItem.bill
        }).then(res => {
             this.groupName = '';
            this.billItem = {};
            this.closeWindow();
            if(res.status == 200){
                this.showToast('删除成功');
                this.getGroup();
            }else{
                this.showToast('删除失败');
            }
        }).catch(err => {
                this.showToast('网络错误');
        })
    },
    showModificationFn(type,item){
        this.showModification = true;
        this.groupType = type;
        this.item = item;
    },
    showDeleteFn(item){
        this.showDelete = true;
        this.item = item;
    },
    showDeleteBillFn(groupName,billItem){
        this.groupName = groupName;
        this.billItem = billItem;
        this.showDeleteBill = true;
    },
    goRecharge(groupName,billitem){
            this.showLoading = true;
			// 缴费项目信息
			request.post('payment/pay-type-detail', {
				cityName: billitem.cityName,
				type: billitem.type,
			}).then(res => {
                console.log(res)
                this.showLoading = false;
				if (res.status == 200) {
					const item = res.data.paymentItemPagingModel;
					this.paymentItemList = res.data.paymentItemList;
					if(this.paymentItemList.length > 1){
                        const paymentItemModelList = item.paymentItemModelList;
                        let paymentList = []
                        for(let i = 0;i<paymentItemModelList.length;i++){
                            const element = paymentItemModelList[i]
                            if(element.paymentItemId == billitem.paymentItemId){
                                paymentList.push(element)
                            }
                        }
                        router.push({
							uri:'User/Recharge',
							params:{
								payName:'1',
								title: billitem.typeName,
								type:billitem.type,
								icon:billitem.imagUrl,
								cityName:billitem.cityName,
                                paymentItemModelList:paymentList,//项目信息
                                groupName,
                                oldGroupName:groupName,
                                oldBill:billitem.bill
							}
						})
					}else{
						// 账单详情
						router.push({
							uri:'User/Recharge',
							params:{
								payName:'1',
								title: billitem.typeName,
								type:billitem.type,
								icon:billitem.imagUrl,
								cityName:billitem.cityName,
                                paymentItemModelList:item.paymentItemModelList,//项目信息
                                groupName,
                                oldGroupName:groupName,
                                oldBill:billitem.bill
							}
						})
					}
				} else {
					this.showToast(res.msg);
				}
			}).catch(err => {
                console.log(err)
                this.showLoading = false;
				this.showToast('网络错误');
			})
    },
    closeWindow(){
        this.inputFocus()
        this.showModification = false;
        this.showDelete = false;
        this.showDeleteBill = false;
    }
})
</script>
