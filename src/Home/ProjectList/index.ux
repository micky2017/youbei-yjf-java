<import src="../../common/TitleBar.ux"></import>
<template>
    <div class="jf-list_body" @click="inputFocus">
        <TitleBar title="{{title}}机构选择" type="{{type}}" righttext="{{cityName}}" external="{{external}}" @click="inputFocus"></TitleBar>
        <div class="jf-list_content">
            <div class="jf-search_body">
                <image width="31px" height="29px" resize-mode="contain" src="../images/search.png" alt=""></image>
                <input @change="searchValue" type="text" name="search" placeholder="搜索" id="search">
            </div>
            <list @click='inputFocus'>
                <list-item @click="affirmItem($item)" type="{{$item}}" for="searchList">
                    <div if="$item != searchList[searchList.length - 1]" class="jf-list_item">
                        <text>{{$item}}</text>
                    </div>
                    <div if="$item == searchList[searchList.length - 1]" class="jf-list_item no-border_bottom">
                        <text>{{$item}}</text>
                    </div>
                </list-item>
            </list>
        </div>
    </div>
</template>

<style lang="less">
@import './index.less';
</style>

<script>
import router from '@system.router'
import storage from '@system.storage'
// import request from '../../utils/request'
 
export default Custom_page({
    public: {
        title: '',
        type: '',
        external: '',
        paymentItemList: [],
        paymentItemModelList: [],
        cityName: '',
        icon: '',
    },
    protected: {
        searchList: [],
        itemValue: '',
    },
    onInit() {
        // console.clear();
        console.log("PL.init");
        console.log(this.cityName);
        // console.log("paymentItemList", this.paymentItemList);
        // console.log("searchList", this.searchList);
        // console.log("paymentItemModelList", this.paymentItemModelList);
        console.log("paymentItemModelList", JSON.parse("{\"data\": " + this.paymentItemModelList + "}").data);
        this.paymentItemList = JSON.parse(this.paymentItemList)
        this.searchList = this.paymentItemList;
        this.paymentItemModelList = JSON.parse("{\"data\": " + this.paymentItemModelList + "}").data;
    },
    onReady() {
        console.log(this.paymentItemList)
        storage.get({
            key: 'external',
            success: (data) => {
                if (data && data != '') {
                    storage.set({
                        key: 'external',
                        value: this.external
                    })
                }
            },
            fail: (err) => {
                storage.set({
                    key: 'external',
                    value: this.external
                })
            }
        })
    },
    inputFocus() {
        if(this.external != "vivoNegative"){
            this.$element('search').focus({ focus: false })
        }
    },
    affirmItem(item) {
        const index = this.paymentItemList.indexOf(item);
        const paymentItemModel = this.paymentItemModelList[index];
        // console.clear();
        // console.log("affirmItem");
        // console.log(this);
        // return false;
        router.push({
            uri: 'Home/Recharge',
            params: {
                payName: '2',
                title: this.title,
                type: this.type,
                cityName: this.cityName,
                external: this.external,
                icon: this.icon,
                paymentItemModelList: [paymentItemModel],
            }
        })
    },
    searchValue(response) {
        this.itemValue = response ? response.value : this.itemValue;
        this.searchList = [];
        for (let i = 0; i < this.paymentItemList.length; i++) {
            if (this.paymentItemList[i].indexOf(this.itemValue) != -1) {
                this.searchList.push(this.paymentItemList[i])
            }
        }
    }
})
</script>