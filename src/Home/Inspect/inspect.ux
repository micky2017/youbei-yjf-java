<import src="../../common/TitleBar.ux"></import>
<import name="Info" src="../../common/InfoList/index.ux"></import>
<import name="toast" src="../../common/Toast/index.ux"></import>

<template>
    <div class="inspect-body">
        <TitleBar title="确认信息" color="#fff"></TitleBar>
        <div if="!inputValue" class="top-up_amount">
            <text>选择充值金额</text>
            <div @click="pickerShow()">
                <text>{{money}} ▼</text>
            </div>
        </div>
        <div if="inputValue" class="top-up_amount">
            <text>输入充值金额</text>
            <div>
                <input value="{{payAmountValue}}" placeholder="{{description}}" onchange="payAmount" type="number" name="payAmount" id="">
                <text>元</text>
            </div>
        </div>
        <Info infoList="{{info_list}}"></Info>
        <text class="invoice">
            {{data.printAddress}}
        </text>
        <div class="next-btn" @click="toOrders()">
            <text>支付</text>
        </div>

        <toast if="{{show_toast}}" text="{{toast_text}}"></toast>

        <!-- 选择金额 -->

        <div class="picker-body" show="{{picker}}" @click="pickerShow()">
            <div class="picker-content" show="{{picker}}">
                <div class="picker-title">
                    <text></text>
                    <text>选择金额</text>
                    <div class="close-picker" @click="pickerShow()">
                        <text >✕</text>
                    </div>
                </div>
                <div class="picker-option">
                    <div class="picker-item" for="{{item in rangeData}}" @click="changeMoney(item)">
                        <text>{{item}}</text>
                        <!-- <input type="radio" name="picker"> -->
                        <text if="{{item == this.selectMoney}}" style="color:#9871c3">✔️</text>
                        <text else></text>
                    </div>
                </div>
                 <div class="next-btn" @click="pickerSelect()">
                    <text>确定</text>
                </div>
            </div>
        </div>
    </div>
</template>
<style lang="less">
    @import "./inspect.less";
</style>
<script>
    import router from '@system.router';
    import request from '../../utils/request'

    export default Custom_page ({
        protected: {
            show_toast:false,
            toast_text:'',
            money:"",
            data:{},
            reqData:{},
            selectMoney:"",
            payAmountValue:'',
            inputValue:true,
            paymentItem:{},
            amountLimit:'',
            itemValue:'',
            qryAcqSsn:'',
            rangeData:[
                "30元",
                "50元",
                "100元",
                "200元",
                "300元"
            ],
            picker:false,
            info_list: [
                {
                    info_name:"充值号码",
                    info_value:"13345678901",
                },
                {
                    info_name:"运营商",
                    info_value:"中国联通",
                },
                {
                    info_name:"收费单位",
                    info_value:"积分科技（北京）有限公司",
                }
            ]
        },
        onReady() {
            this.paymentItem = JSON.parse(this.paymentItem)
            this.data = JSON.parse(this.data)
            const billObj = this.data.billQueryResultDataModelList[0];
            const newInfo = [{
                info_name:this.itemValue.split(":")[0],
                info_value:this.itemValue.split(":")[1],
            },{
                info_name:"用户名",
                info_value:billObj.customerName,
            },{
                info_name:"账单金额",
                info_value:billObj.payAmount/100 + '元',
            },{
                info_name:"账期",
                info_value:`${billObj.beginDate}-${billObj.endDate}`,
            }];
            this.info_list = newInfo;
            // this.payAmountValue = billObj.payAmount /100;
            // 缴费
            this.payItem = this.data.createPaymentBillParamsModel;
            this.description = this.payItem.description;
            this.amountLimit = this.payItem.amountLimit.split('-');
            // this.payAmountValue = Number(this.amountLimit[0]);
            if(this.payItem.chooseAmount){
                this.inputValue = false;
                this.rangeData = this.payItem.chooseAmount.split("|");
                this.money = this.rangeData[0];
                this.selectMoney = this.rangeData[0];
            }else{
                this.inputValue = true;
            }
        },
        payAmount(response){
            this.payAmountValue = response ? response.value : this.payAmountValue;
            if(Number(this.payAmountValue)<Number(this.amountLimit[0])){
                // this.payAmountValue = Number(this.amountLimit[0]);
                this.showToast(`最低金额限制为:${this.amountLimit[0]}`)
            }else if(Number(this.payAmountValue)>Number(this.amountLimit[1])){
                // this.payAmountValue = Number(this.amountLimit[1]);
                this.showToast(`最高金额限制为:${this.amountLimit[1]}`)
            }
        },
        toOrders(){
            if(this.inputValue){
                if(!this.payAmountValue){
                    this.showToast("请输入充值金额")
                    return false;
                }
            }else{
                if(!this.money){
                    this.showToast("请选择充值金额")
                    return false;
                }
            }
            // 查缴
            // request.post('jiaofei/generate-bill',params).then(res => {
                const params={
                    data:this.data,
                    payAmount:this.payAmountValue,
                    qryAcqSsn:this.qryAcqSsn
                }
                if(this.inputValue){
                    params.payAmount = this.payAmountValue;
                }else{
                    params.payAmount = this.money;
                }
                params.reqData = this.reqData;

                 if(this.paymentItem.businessFlow== 2){
                     const reqData = {
                         itemCode:this.paymentItem.paymentItemId,
                         flag:2,
                         type:1,
                        //  qryAcqSsn:this.data.qryAcqSsn,
                     }
                     Object.assign(reqData,this.reqData)
                    request.post('jiaofei/generate-bill',reqData).then(res => {
                        if(res.status == 200){
                            params.data = res.data.billQueryResultModel
                            params.qryAcqSsn = res.data.qryAcqSsn
                            router.push({
                                uri:"Home/Orders",
                                params,
                            })
                        }
                    })
                }else{
                    router.push({
                        uri:"Home/Orders",
                        params,
                    })
                }
                
            
        },
        pickerShow(){
            this.picker = !this.picker;
        },
        pickerSelect(){
            this.money = this.selectMoney;
            this.picker = false;
        },
        changeMoney(value){
            this.selectMoney = value;
        },
        // 显示toast
        showToast(text,back){
            this.toast_text = text;
            this.show_toast = true;
            setTimeout(() => {
                this.show_toast = false;
                if(back){
                    router.back()
                }
            },1500)
        },
    })
</script>