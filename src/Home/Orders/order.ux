<import src="../../common/TitleBar.ux"></import>
<import name="InfoList" src="../../common/InfoList/index.ux"></import>
<import name="PayTypeList" src="../PayTypeList/index.ux"></import>
<import name="toast" src="../../common/Toast/index.ux"></import>

<template>
    <div class="order-body">
        <TitleBar title="确认信息" color="#fff"></TitleBar>
        <div style="height:40px;"></div>
        <InfoList style="margin-top:40px" infoList="{{info_list}}"></InfoList>
        <text class="invoice">
            {{address}}
        </text>
        <div class="next-btn" @click="toFinish()">
            <text>支付</text>
        </div>
        <!-- <PayTypeList /> -->
        <!-- <div class="payType-body"> -->
            <div class="picker-body" show="{{picker}}" @click="pickerShow()">
                <div class="picker-content" show="{{picker}}">
                    <div class="picker-title">
                        <text></text>
                        <text>确认付款</text>
                        <div class="close-picker" @click="pickerShow()">
                            <text >✕</text>
                        </div>
                    </div>
                    <div class="picker-option">
                        <div class="picker-item" for="item in paytype_list" @click="changeMoney(item.payTypeName)">
                            <text>{{item.payTypeName}}</text>
                            <text if="{{item.payTypeName == this.selectValue}}" style="color:#9871c3">✔️</text>
                            <text else></text>
                        </div>
                    </div>
                    <div class="next-btn" @click="pickerSelect()">
                        <text>确定</text>
                    </div>
                </div>
            </div>
        <!-- </div> -->
        <toast if="{{show_toast}}" text="{{toast_text}}"></toast>
    </div>
</template>
<style lang="less">
    @import "./order.less";
</style>
<script>
    import router from '@system.router';
    import request from '../../utils/request'
    import webview from '@system.webview'
    export default Custom_page ({
        protected: {
            reqData:{},
            data:{},
            show_toast:false,
            qryAcqSsn:'',
            toast_text:'',
            payAmount:'',
            address:'',
            info_list: [],
            filed:[],
            picker:false,
            payTypeName:'微信支付',
            selectValue:'',
            paytype_list: [
                {
                    payTypeName: "微信支付",
                    payType: "1",
                },
                {
                    payTypeName: "支付宝支付",
                    payType: "2",
                },
                {
                    payTypeName: "银联",
                    payType: "3",
                }
            ]
        },
        // 显示toast
        showToast(text,back){
            this.toast_text = text;
            this.show_toast = true;
            setTimeout(() => {
                this.show_toast = false;
                if(back){
                    router.back()
                }
            },1500)
        },
        onReady() {
            this.data = JSON.parse(this.data);
            const data = this.data;
            // this.address = data.item7 || "";
            // printAddress
            this.info_list = [
                {
                    info_name: "缴费号码",
                    info_value: data.billKey,
                },
                {
                    info_name: "缴费项目",
                    info_value: data.paymentItemName,
                },
                {
                    info_name: "收费单位",
                    info_value: data.companyName,
                },
                {
                    info_name: "充值金额",
                    info_value: `${this.payAmount}元`,
                },
                {
                    info_name: "支付金额",
                    info_value: `${this.payAmount}元`,
                },
                {
                    info_name: "发票获取",
                    info_value: data.printAddress,
                }
            ]
        },
        toFinish(){
            // this.pickerShow()
            // merOrderNo  merOrderDate  payAmount  paymentItemCode  paymentItemId  billKey   billAmount  queryAcqSsn  contractNo  filed
            const data = this.data;
            const date = new Date();
            const year = date.getFullYear();  // 获取完整的年份(4位,1970)
            const month = date.getMonth() + 1 > 9 ? date.getMonth() + 1 : '0'+(date.getMonth() + 1);  // 获取月份(0-11,0代表1月,用的时候记得加上1)
            const day = date.getDate() > 9 ? date.getDate() : '0' + date.getDate();
            const merOrderDate = year+month+day;

            let outTradeNo="";  //订单号
            for(let i=0;i<6;i++) //6位随机数，用以加在时间戳后面。
            {
                outTradeNo += Math.floor(Math.random()*10);
            }
            outTradeNo = new Date().getTime() + outTradeNo; 

console.log(this.qryAcqSsn)
            const params = {
                merOrderNo:outTradeNo,
                merOrderDate,
                payAmount:this.payAmount,
                paymentItemCode:data.paymentItemCode,
                paymentItemId:data.paymentItemId,
                // billKey:data.billKey,
                billAmount:data.billQueryResultDataModelList[0].payAmount,
                queryAcqSsn:this.qryAcqSsn,
                contractNo:data.billQueryResultDataModelList[0].contractNo,
                // filed:this.filed,
            }
            Object.assign(params,JSON.parse(this.reqData))
            request.post('pay/creat',params).then(res => {
                console.log(res)
                if(res.status == 200){
                    // router.push({
                    //     uri:'Home/Checkstand',
                    //     params:{
                    //         src:res.data.url
                    //     }
                    // })
                     if(res.data.url){
                            webview.loadUrl({
                                url: res.data.url,
                                allowthirdpartycookies: true
                            })
                        }else{
                            this.showToast(res.data.respMsg)
                        }
                }else{
                    this.showToast(res.msg)
                }
            })
        },
        pickerShow(){
            this.picker = !this.picker;
        },
        pickerSelect(){
            this.payTypeName = this.selectMoney;
            this.picker = false;
            router.push({
                uri:"Home/Finish"
            })
        },
        changeMoney(value){
            this.selectValue = value;
        }
    })
</script>