<import src="../../common/TitleBar.ux"></import>
<import name="toast" src="../../common/Toast/index.ux"></import>

<template>
    <div class="city-list_body">
        <TitleBar title="ÈÄâÊã©ÂüéÂ∏Ç" color="#fff" @click="hideInput"></TitleBar>
        <div class="search-city">
            <text>üîç</text>
            <input id="search-city" type="text" value="{{search_value}}"  @change="searchCity" @blur="showList()" placeholder="ËØ∑ËæìÂÖ•ÂüéÂ∏ÇÂêçÁß∞"></input>
            <text show="{{show_close}}" @click="clearCityValue">‚ùé</text>
        </div>
        <div class="location" @click="hideInput">
            <text>ÊÇ®ÂΩìÂâçÊâÄÂú®ÂüéÂ∏ÇÔºö {{city_name}}</text>
        </div>
        <toast if="{{show_toast}}" text="{{toast_text}}"></toast>
       
        <list show="{{!showSearch}}" id="list-body" class="city-list">
            <list-item type="hot_city" class="hot-city">
                <text>ÁÉ≠Èó®ÂüéÂ∏Ç</text>
                <div class="hot-city_items">
                    <div class="city-item" @click="selectCity(item.cityName,item.cityId)"  for="item in cityHotCategoryModelList">
                        <text>{{item.cityName}}</text> 
                    </div>
                </div>
            </list-item>
            <list-item type="city_group" class="city-group" for="(index , item) in cityModelList">
                <div class="city-initial">
                    <text>{{item.cityFlag}}</text>
                </div>
                <div class="city-item" @click="selectCity(city.cityName,city.cityId)" for="city in item.children">
                    <text>{{city.cityName}}</text>
                </div>
            </list-item>
        </list>
        <div  show="{{!showSearch}}"  class="navigation-right" @touchmove="selectCityGroup()">
            <div for="item in cityModelList">
                <text>{{item.cityFlag}}</text>
            </div>
        </div>
        <div class="city-search_body" show="{{showSearch}}">
            <div class="city-item" @click="selectCity(city.cityName,city.cityId)" for="city in cityRenCategoryModelList">
                <text>{{city.cityName}}</text>
            </div>
        </div>
    </div>
</template>

<style lang="less">
    @import "./cityList.less";
</style>

<script>
    const router = require('@system.router');
    import request from '../../utils/request';
	import storage from"@system.storage";
    export default Custom_page ({
        protected: {
             show_toast:false,
            toast_text:'',
            showSearch:false,
            show_close:false,
            search_value:"",
            city_name:"Âåó‰∫¨Â∏Ç",
            cityId:"101701",
            cityHotCategoryModelList:[],
            section: [],
            cityModelList: [],
            cityRenCategoryModelList:[]
        },

        onReady(){
            request.get("jiaofei/get-city-list",{}).then(res => {
                if(res.status == 200){ 
                    // cityRenCategoryModelList  ÊúÄËøëÂ∏∏Áî®ÂüéÂ∏Ç
                    // cityHotCategoryModelList  ÁÉ≠Èó®ÂüéÂ∏Ç
                    // cityCategoryModelList  ÂüéÂ∏ÇÂàóË°®
                        // this.section = res.data.section;
                        this.cityHotCategoryModelList = res.data.cityHotCategoryModelList;
                        this.cityModelList = res.data.cityCategoryModelList;
                        this.cityRenCategoryModelList = res.data.cityRenCategoryModelList;
                        this.cacheRenList = res.data.cityRenCategoryModelList;
                }
            }).catch(err => {
                this.showToast("ÁΩëÁªúÈîôËØØ",'back');
                // setTimeout(() => {
                //     router.push({
                //         uri:"/"
                //     })
                // },1500)
            })
        },
        selectCityGroup(event){
            let y =event.changedTouches[0].pageY;
            let index = parseInt((y - 400) / 40);
            index = index > 0 ? (index > this.cityModelList.length ? this.cityModelList.length : index+1) : 1;
            // const initial = this.city_list[index-1].initial;
            const list = this.$element('list-body');
            list.scrollTo({index:index});
            
        },
        hideInput(){
            this.$element('search-city').focus({focus:false})
        },
        selectCity(cityName,cityId){
            this.city_name = cityName;
            this.cityId = cityId;
            storage.set({
                key: 'cityName',
                value: cityName,
            })
            storage.set({
                key: 'cityId',
                value: cityId,
            })
            router.push({
                uri:"/"
            })
            this.showSearch = false;
            this.search_value = "";
            this.hideInput()
        },
        searchCity(response){
            this.search_value = response ? response.value : this.search_value;
            let cityRenCategoryModelList = [];
            for(let i = 0;i<this.cityModelList.length;i++){
                cityRenCategoryModelList = cityRenCategoryModelList.concat(this.cityModelList[i].children)
            }
            if(response.value != ""){
                this.show_close = true;
                this.showSearch = true;
                let newRenList = []
                for(let i = 0;i<cityRenCategoryModelList.length;i++){
                    if(cityRenCategoryModelList[i].cityName.indexOf(response.value) != -1){
                        newRenList.push(cityRenCategoryModelList[i])
                    }
                }
                this.cityRenCategoryModelList = newRenList
            }else{
                this.cityRenCategoryModelList = this.cacheRenList;
                this.show_close = false;
                this.showSearch = false;
            }
        },
        // ÊòæÁ§∫toast
        showToast(text,back){
            this.toast_text = text;
            this.show_toast = true;
            setTimeout(() => {
                this.show_toast = false;
                if(back){
                    router.back()
                }
            },1500)
        },
        clearCityValue(){
            this.search_value = "";
            this.hideInput()
        },
        showList(){
            // this.showSearch = false;
        }
    })
</script>