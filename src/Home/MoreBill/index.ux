<import src="../../common/TitleBar.ux"></import>
<template>
    <div class="jf-list_body">
        <TitleBar title="{{title}}账单列表"></TitleBar>
        <div class="jf-list_content">
            <!-- <div class="jf-search_body">
                <image width="31px" height="29px" resize-mode="contain" src="../images/search.png" alt=""></image>
                <input @change="searchValue" type="text" name="search" placeholder="搜索" id="search">
            </div> -->
            <list>
                <list-item @click="affirmItem($item)" type="{{$item}}" for="searchList">
                    <div class="jf-list_item" >
                        <text>{{$item}}待缴账单</text>
                    </div>
                </list-item>
            </list>
        </div>
    </div>
</template>

<style lang="less">
	@import './index.less';
</style>

<script>
	import router from '@system.router'
    // import request from '../../utils/request'

	export default Custom_page ({
		protected: {
            title:'',
            type:'',
            external:'',
            searchList:[],
            cityName:'',
            icon:'',
            billQueryList:[],
            paymentItem: {},
            itemValue: '',
            reqData: '',
            data: '',
            qryAcqSsn: '',
		},
		onInit() {
            this.billQueryList = JSON.parse(this.billQueryList)
            this.searchList = this.billQueryList;
            this.data = JSON.parse(this.data)
        },
        onReady() {
            console.log(this.paymentItemList)
        },
        inputFocus(){
            if(this.external != "vivoNegative"){
                this.$element('search').focus({ focus: false })
            }
        },
        affirmItem(item){
            const index = this.billQueryList.indexOf(item);
            console.log(index)
            // const paymentItemModel = this.billQueryList[index];
            // const billQueryResultDataModel = this.data.billQueryResultDataModelList[index]
            router.push({
                uri:'Home/Inspect',
                params:{
                    title:this.title,
                    paymentItem: this.paymentItem,
                    itemValue: this.itemValue,
                    reqData: this.reqData,
                    data: this.data,
                    qryAcqSsn: this.qryAcqSsn,
                    modelIndex:index
                }
            })
        },
        searchValue(response){
            this.itemValue = response ? response.value : this.itemValue;
            this.searchList = [];
            for(let i = 0;i<this.billQueryList.length;i++){
                if(this.billQueryList[i].indexOf(this.itemValue) != -1){
                    this.searchList.push(this.billQueryList[i])
                }
            }
        }
	})
</script>